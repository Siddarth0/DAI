# Generated by Django 5.2.3 on 2025-07-03 11:58

import ckeditor.fields
import ckeditor_uploader.fields
import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "button1_text",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("button1_link", models.URLField(blank=True, null=True)),
                (
                    "button2_text",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("button2_link", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Banner",
                "verbose_name_plural": "Banners",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CMSPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(editable=False, max_length=255, unique=True)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "meta_tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated tags for SEO",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("location", "Location"),
                        ],
                        max_length=10,
                    ),
                ),
                ("value", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Contact Info",
                "verbose_name_plural": "Contact Infos",
            },
        ),
        migrations.CreateModel(
            name="Guidelines",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("icon", models.FileField(upload_to="uploads/icons/guidelines/")),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order in which the services appear"
                    ),
                ),
            ],
            options={
                "verbose_name": "Guidelines",
                "verbose_name_plural": "Guidelines",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="NewsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("image", models.ImageField(upload_to="uploads/news/images")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("news", "News"),
                            ("webinar", "Webinar"),
                            ("event", "Event"),
                        ],
                        default="news",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(default=datetime.date.today)),
                ("end_date", models.DateField(default=datetime.date.today)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "News Event",
                "verbose_name_plural": "News Events",
            },
        ),
        migrations.CreateModel(
            name="Notice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", ckeditor.fields.RichTextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="uploads/notices/images/"
                    ),
                ),
                (
                    "pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="uploads/notices/pdfs/"
                    ),
                ),
                (
                    "is_popup",
                    models.BooleanField(
                        default=False, help_text="Check to show this notice as a pop up"
                    ),
                ),
                (
                    "popup_order",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="order of popup display if multiple",
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["popup_order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Quicklinks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("url", models.URLField()),
            ],
            options={
                "verbose_name": "Quick Link",
                "verbose_name_plural": "Quick Links",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=100)),
                ("subtitle", models.CharField(max_length=500)),
                ("description", models.TextField(blank=True)),
                ("icon", models.FileField(upload_to="uploads/icons/service/")),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order in which the services appear"
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="SMEStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("icon", models.ImageField(upload_to="uploads/icons/sme_steps/")),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="Order in which the steps appear"
                    ),
                ),
            ],
            options={
                "verbose_name": "SME Step",
                "verbose_name_plural": "SME Steps",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="SocialLinks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("icon", models.FileField(upload_to="uploads/icons/sociallinks/")),
                ("url", models.URLField()),
            ],
            options={
                "verbose_name": "Social Link",
                "verbose_name_plural": "Social Links",
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("internal", "Internal Page (by named URL)"),
                            ("external", "External URL"),
                            ("cms", "CMS Page"),
                        ],
                        default="internal",
                        max_length=10,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "module",
                    models.CharField(
                        blank=True,
                        help_text="Named URL for internal pages",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "cms_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dashboard.cmspage",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="dashboard.menuitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Menu Item",
                "verbose_name_plural": "Menu Items",
                "ordering": ["order"],
            },
        ),
    ]
